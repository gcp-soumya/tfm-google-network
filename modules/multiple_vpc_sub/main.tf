# Configure the Google Cloud provider for resources within this module.
provider "google" {
  project = var.project_id
}

# Create VPC Networks
resource "google_compute_network" "main" {
  for_each = var.vpc_networks

  name                    = each.value.name
  auto_create_subnetworks = each.value.auto_create_subnetworks
  routing_mode            = each.value.routing_mode
  description             = each.value.description
}

# --- CORRECTED LOCALS BLOCK ---
locals {
  # Step 1: Create a flat LIST of all subnet objects,
  # each augmented with its parent VPC's internal key.
  # 'flatten' is used here to combine the lists generated by the inner loop.
  all_subnets_list = flatten([
    for vpc_key, vpc_config in var.vpc_networks : # Loop through each VPC
    [ # For each VPC, create a list of its subnets
      for subnet_config in vpc_config.subnets : # Loop through each subnet within the current VPC
      {
        vpc_key       = vpc_key         # Store the internal key of the parent VPC
        subnet_config = subnet_config   # The actual subnet configuration details
      }
    ]
  ])

  # Step 2: Convert the flat LIST into a MAP suitable for 'for_each'.
  # This map will have unique keys (e.g., "prod_vpc-prod-us-central1-subnet-01")
  # and values containing the subnet config and its parent VPC key.
  all_subnets_flat = {
    for s in local.all_subnets_list : # Iterate over the flat list of subnet objects
    "${s.vpc_key}-${s.subnet_config.name}" => s # Define the map key and value for each element
  }
}
# --- END OF CORRECTED LOCALS BLOCK ---

# Create Subnets for each VPC Network using the flattened map.
resource "google_compute_subnetwork" "main" {
  for_each = local.all_subnets_flat # Iterate over the correctly flattened map

  name          = each.value.subnet_config.name
  ip_cidr_range = each.value.subnet_config.ip_cidr_range
  region        = each.value.subnet_config.region
  description   = each.value.subnet_config.description
  # Link the subnet to its parent VPC network.
  # `google_compute_network.main[each.value.vpc_key]` correctly references the specific VPC resource
  # created by the `google_compute_network.main` block using the stored `vpc_key`.
  network       = google_compute_network.main[each.value.vpc_key].self_link
}
